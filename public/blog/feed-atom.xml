<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Blog Entries - ZF Blog</title>
  <updated>2012-09-21T19:30:00+0000</updated>
  <generator uri="http://framework.zend.com" version="2.0.0">Zend_Feed_Writer</generator>
  <link rel="alternate" type="text/html" href="http://framework.zend.com/blog.html"/>
  <link rel="self" type="application/atom+xml" href="http://framework.zend.com/blog-atom.xml"/>
  <id>http://framework.zend.com/blog.html</id>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.0.2 Released!]]></title>
    <published>2012-09-21T19:30:00+0000</published>
    <updated>2012-09-21T19:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-0-2-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-0-2-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.0.2! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This release fixes an issue in the "Router" service that was
affecting URL generation, among other things.</xhtml:p>
<xhtml:p>Specifically, for the 2.0.1 release, a change was made to allow
URL generation to continue to work even under a Console paradigm.
However, this change apparently caused URL generation to break in a
number of situations when in an HTTP paradigm. A fix was put into
place, and integration tests created, to ensure this works going
forward.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>A handful of other patches were also applied for this release;
the full list of changes follows:</xhtml:p>
<xhtml:pre>
- 2383: Changed unreserved char definition in Zend\Uri (ZF2-533) and added shell
  escaping to the test runner (https://github.com/zendframework/zf2/pull/2383)
- 2393: Trying to solve issue ZF2-558
  (https://github.com/zendframework/zf2/pull/2393)
- 2398: Segment route: add fix for optional groups within optional groups
  (https://github.com/zendframework/zf2/pull/2398)
- 2400: Use 'Router' in http env and 'HttpRouter' in cli
  (https://github.com/zendframework/zf2/pull/2400)
- 2401: Better precision for userland fmod algorithm
  (https://github.com/zendframework/zf2/pull/2401)
</xhtml:pre>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Many thanks to all contributors to this release, and
particularly to Jurian Sluiman for resolving the issue, and Demian
Katz for providing extra context and testing!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.0.1 Released!]]></title>
    <published>2012-09-20T21:30:00+0000</published>
    <updated>2012-09-20T21:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-0-1-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-0-1-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.0.1! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This release also includes a minor security fix; please read on
for more details.</xhtml:p>
<xhtml:h2>Security</xhtml:h2>
<xhtml:p>Robert Basic reported that a number of components had not been
refactored to use the new <xhtml:code>Zend\Escaper</xhtml:code> API internally.
While they had been escaping output, the methodology did not always
follow that of the Escaper component, and we decided to update them
accordingly. You can <xhtml:a href="/security/advisory/ZF2012-03">read
more about the issue on the ZF2012-03 advisory</xhtml:a>.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>We've applied almost 60 patches in the last two weeks, ranging
from simple docblock corrections to the aforementioned security
patch. The full list of changes follows:</xhtml:p>
<xhtml:pre>
- 2285: Seed RouteMatch params as long as params is set. This permits setting an
  empty array. (https://github.com/zendframework/zf2/pull/2285)
- 2286: prepareNotFoundViewModel listner -  eventResult as ViewModel if set
  (https://github.com/zendframework/zf2/pull/2286)
- 2290: <xhtml:span>$label</xhtml:span> only when filled
  (https://github.com/zendframework/zf2/pull/2290)
- 2292: Allow (int)0 in coomments count in entry feed
  (https://github.com/zendframework/zf2/pull/2292)
- 2295: force to check className parameters
  (https://github.com/zendframework/zf2/pull/2295)
- 2296: mini-fix in controller plugin manager
  (https://github.com/zendframework/zf2/pull/2296)
- 2297: fixed phpdoc in Zend\Mvc\ApplicationInterface
  (https://github.com/zendframework/zf2/pull/2297)
- 2298: Update to Date element use statements to make it clearer which DateTime
  (https://github.com/zendframework/zf2/pull/2298)
- 2300: FormRow translate label fix (#ZF2-516)
  (https://github.com/zendframework/zf2/pull/2300)
- 2302: Notifications now to #zftalk.dev
  (https://github.com/zendframework/zf2/pull/2302)
- 2306: Fix several cs (https://github.com/zendframework/zf2/pull/2306)
- 2307: Removed comment about non existent Zend_Tool
  (https://github.com/zendframework/zf2/pull/2307)
- 2308: Fix pluginmanager get method error
  (https://github.com/zendframework/zf2/pull/2308)
- 2309: Add consistency with event name
  (https://github.com/zendframework/zf2/pull/2309)
- 2310: Update library/Zend/Db/Sql/Select.php
  (https://github.com/zendframework/zf2/pull/2310)
- 2311: Version update (https://github.com/zendframework/zf2/pull/2311)
- 2312: Validator Translations (https://github.com/zendframework/zf2/pull/2312)
- 2313: ZF2-336: Zend\Form adds enctype attribute as multipart/form-data
  (https://github.com/zendframework/zf2/pull/2313)
- 2317: Make Fieldset constructor consistent with parent Element class
  (https://github.com/zendframework/zf2/pull/2317)
- 2321: ZF2-534 Zend\Log\Writer\Syslog prevents setting application name
  (https://github.com/zendframework/zf2/pull/2321)
- 2322: Jump to cache-storing instead of returning
  (https://github.com/zendframework/zf2/pull/2322)
- 2323: Conditional statements improved(minor changes).
  (https://github.com/zendframework/zf2/pull/2323)
- 2324: Fix for ZF2-517: Zend\Mail\Header\GenericHeader fails to parse empty
  header (https://github.com/zendframework/zf2/pull/2324)
- 2328: Wrong \__clone method (https://github.com/zendframework/zf2/pull/2328)
- 2331: added validation support for optgroups
  (https://github.com/zendframework/zf2/pull/2331)
- 2332: README-GIT update with optional pre-commit hook
  (https://github.com/zendframework/zf2/pull/2332)
- 2334: Mail\Message::getSubject() should return value the way it was set
  (https://github.com/zendframework/zf2/pull/2334)
- 2335: ZF2-511 Updated refactored names and other fixes
  (https://github.com/zendframework/zf2/pull/2335)
- 2336: ZF-546 Remove duplicate check for time
  (https://github.com/zendframework/zf2/pull/2336)
- 2337: ZF2-539 Input type of image should not have attribute value
  (https://github.com/zendframework/zf2/pull/2337)
- 2338: ZF2-543: removed linked but not implemented cache adapters
  (https://github.com/zendframework/zf2/pull/2338)
- 2341: Updated Zend_Validate.php pt_BR translation to 25.Jul.2011 EN Revision
  (https://github.com/zendframework/zf2/pull/2341)
- 2342: ZF2-549 Zend\Log\Formatter\ErrorHandler does not handle complex events
  (https://github.com/zendframework/zf2/pull/2342)
- 2346: updated Page\Mvc::isActive to check if the controller param was
  tinkered (https://github.com/zendframework/zf2/pull/2346)
- 2349: Zend\Feed Added unittests for more code coverage
  (https://github.com/zendframework/zf2/pull/2349)
- 2350: Bug in Zend\ModuleManager\Listener\LocatorRegistrationListener
  (https://github.com/zendframework/zf2/pull/2350)
- 2351: ModuleManagerInterface is never used
  (https://github.com/zendframework/zf2/pull/2351)
- 2352: Hotfix for AbstractDb and Csrf Validators
  (https://github.com/zendframework/zf2/pull/2352)
- 2354: Update library/Zend/Feed/Writer/AbstractFeed.php
  (https://github.com/zendframework/zf2/pull/2354)
- 2355: Allow setting CsrfValidatorOptions in constructor
  (https://github.com/zendframework/zf2/pull/2355)
- 2356: Update library/Zend/Http/Cookies.php
  (https://github.com/zendframework/zf2/pull/2356)
- 2357: Update library/Zend/Barcode/Object/AbstractObject.php
  (https://github.com/zendframework/zf2/pull/2357)
- 2358: Update library/Zend/ServiceManager/AbstractPluginManager.php
  (https://github.com/zendframework/zf2/pull/2358)
- 2359: Update library/Zend/Server/Method/Parameter.php
  (https://github.com/zendframework/zf2/pull/2359)
- 2361: Zend\Form Added extra unit tests and some code improvements
  (https://github.com/zendframework/zf2/pull/2361)
- 2364: Remove unused use statements
  (https://github.com/zendframework/zf2/pull/2364)
- 2365: Resolve undefined classes and constants
  (https://github.com/zendframework/zf2/pull/2365)
- 2366: fixed typo in Zend\View\HelperPluginManager
  (https://github.com/zendframework/zf2/pull/2366)
- 2370: Error handling in AbstractWriter::write using Zend\Stdlib\ErrorHandler
  (https://github.com/zendframework/zf2/pull/2370)
- 2372: Update library/Zend/ServiceManager/Config.php
  (https://github.com/zendframework/zf2/pull/2372)
- 2375: zend-inputfilter already requires
  (https://github.com/zendframework/zf2/pull/2375)
- 2376: Activate the new GitHub feature: Contributing Guidelines
  (https://github.com/zendframework/zf2/pull/2376)
- 2377: Update library/Zend/Mvc/Controller/AbstractController.php
  (https://github.com/zendframework/zf2/pull/2377)
- 2379: Typo in property name in Zend/Db/Metadata/Object/AbstractTableObject.php
  (https://github.com/zendframework/zf2/pull/2379)
- 2382: PHPDoc params in AbstractTableGateway.php
  (https://github.com/zendframework/zf2/pull/2382)
- 2384: Replace Router with Http router in url view helper
  (https://github.com/zendframework/zf2/pull/2384)
- 2387: Replace PHP internal fmod function because it gives false negatives
  (https://github.com/zendframework/zf2/pull/2387)
- 2388: Proposed fix for ZF2-569 validating float with trailing 0's (10.0,
  10.10) (https://github.com/zendframework/zf2/pull/2388)
- 2391: clone in Filter\FilterChain
  (https://github.com/zendframework/zf2/pull/2391)
- Security fix: a number of classes were not using the Escaper component in
  order to perform URL, HTML, and/or HTML attribute escaping. Please see
  http://framework.zend.com/security/advisory/ZF2012-03 for more details.
</xhtml:pre>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Many thanks to all contributors to this release! Every change
helps make the framework better.</xhtml:p>
<xhtml:h2>Going Forward</xhtml:h2>
<xhtml:p>During an IRC meeting today, we voted to have monthly
maintenance releases, falling on the third Wednesday of each month.
Minor releases will be released every 8 - 12 weeks, incrementally
providing new features to the framework. We'll keep you posted on
the blog as new releases are made!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.0.0 STABLE Released!]]></title>
    <published>2012-09-06T02:00:00+0000</published>
    <updated>2012-09-06T02:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-0-0-stable-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-0-0-stable-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.0.0
<xhtml:strong>STABLE</xhtml:strong>! Packages and installation instructions are
available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>Zend Framework 2 has been years in the making. Version 1.0.0 was
released in July 2007 -- over 5 years ago! Since then, we've
incrementally added features, building on the solid base we'd
created.</xhtml:p>
<xhtml:p>A lot of code has been written on those foundations -- estimates
of ZF downloads run anywhere from hundreds of thousands to
millions, depending on the statistics you look at. It's been used
to build everything from hobbyist websites to powering some of the
most visited sites on the web. We've done a lot with Zend Framework
1 over the years.</xhtml:p>
<xhtml:p>We also exposed a lot of cracks in the foundations. Patterns
we'd taken for granted, such as Singletons, reared their ugly heads
and showed us where we'd built in inflexibility and hard-coded
dependencies. We realized that while we'd built a number of
interfaces, our code was making assumptions that fell outside those
definitions. Some code, while it felt elegant, was difficult to
learn, or improperly intermingled different architectural concerns,
creating problems where we hadn't had any before.</xhtml:p>
<xhtml:p>Zend Framework 2 aims to build on our experiences with Zend
Framework 1, to learn both from our mistakes as well as our
successes.</xhtml:p>
<xhtml:p>It's not perfect. No software project is. But I think it's
qualitatively <xhtml:em>better</xhtml:em>. We finally achieved a dream that was
conceived in the 0.X days of Zend Framework, to be able to create
and consume standalone modules of MVC code. Thanks to the efforts
of <xhtml:a href="http://blog.evan.pro/">Evan Coury</xhtml:a>, this was made
possible via a new component, the <xhtml:a href="/manual/2.0/en/modules/zend.module-manager.intro.html">ModuleManager</xhtml:a>,
making the process trivially easy. Another problem that plagued ZF1
was how to get dependencies into controllers -- the ZF1 solution of
using a singleton (<xhtml:code>Zend_Controller_Front</xhtml:code>) to get at a
registry (<xhtml:code>Zend_Application_Bootstrap</xhtml:code>) -- was, quite
simply, a testing nightmare. Today, via <xhtml:a href="/manual/2.0/en/modules/zend.service-manager.intro.html">the
ServiceManager</xhtml:a>, or, if you're gutsy, <xhtml:a href="/manual/2.0/en/modules/zend.di.introduction.html">Zend\Di</xhtml:a>, we
have standard, testable solutions; we have <xhtml:a href="http://ralphschindler.com/">Ralph Schindler</xhtml:a> to thank for both.
Altering the workflow of the application or a single component was
often difficult -- the various hooks were either not plentiful
enough or difficult to arrange in different configurations. Thanks
to the <xhtml:a href="/manual/2.0/en/modules/zend.event-manager.event-manager.html">EventManager</xhtml:a>,
these use cases are easily resolved.</xhtml:p>
<xhtml:p>The end result is that writing applications is a lot more
flexible, and in many cases easier.</xhtml:p>
<xhtml:p>If you've worked significantly with ZF1, ZF2 will look alien to
you. That's okay. We'll continue to support ZF1 with bugfixes and
security updates for the next 18 to 24 months. But start learning
ZF2 -- I think once you do, you'll be amazed and impressed by what
you can accomplish. We plan to publish a migration guide in the
coming weeks to make your transition simpler, and to encourage you
to start utilizing the power of ZF2 sooner.</xhtml:p>
<xhtml:p>I'd go into detail on all the new components, but I don't want
to bore you. You can <xhtml:a href="/changelog/2.0.0">read the
changelog</xhtml:a>, or attend one of the <xhtml:a href="http://www.zend.com/en/company/events/">many upcoming ZF2
webinars</xhtml:a> at zend.com. I'll be <xhtml:a href="http://www.zend.com/en/company/news/event/1112_webinar-getting-started-with-zf2">
hosting a ZF2 Intro next Wednesday</xhtml:a> if you want some
guidance.</xhtml:p>
<xhtml:p>If you're feeling brave and want to try out ZF2 today, we offer
the following resources:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">Our downloads page</xhtml:a> details how
to get your hands on the source code.</xhtml:li>
<xhtml:li><xhtml:a href="/downloads/skeleton-app">Our skeleton application</xhtml:a>
is a fast way to have a working application that you can start
tweaking.</xhtml:li>
<xhtml:li><xhtml:a href="/downloads/phpcloud">Or try out ZF2 on phpcloud</xhtml:a>,
which will get you up and running without needing to even start a
web server!</xhtml:li>
</xhtml:ul>
<xhtml:p>ZF2 has been the project of many people over the last couple
years. I'd especially like to call out my team, and the community
review team (CR Team) for their efforts:</xhtml:p>
<xhtml:ul>
<xhtml:li>Ralph Schindler (Zend)</xhtml:li>
<xhtml:li>Enrico Zimuel (Zend)</xhtml:li>
<xhtml:li>Rob Allen (CR Team)</xhtml:li>
<xhtml:li>Pádraic Brady (CR Team)</xhtml:li>
<xhtml:li>Evan Coury (CR Team)</xhtml:li>
<xhtml:li>Maks3w (CR Team)</xhtml:li>
<xhtml:li>Ryan Mauger (CR Team)</xhtml:li>
<xhtml:li>Dolf Schimmel (CR Team)</xhtml:li>
<xhtml:li>Ben Scholzen (CR Team)</xhtml:li>
</xhtml:ul>
<xhtml:p>Take a moment to thank them when you get a chance -- without
their efforts, there would not be a ZF2.</xhtml:p>
<xhtml:p>Now, let's go build amazing things!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.0.0rc6 Released!]]></title>
    <published>2012-08-29T17:55:00+0000</published>
    <updated>2012-08-29T17:55:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-0-0rc6-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-0-0rc6-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.0.0rc6! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li><xhtml:a href="http://packages.zendframework.com/">http://packages.zendframework.com/</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>We've been releasing release candidates weekly since mid-July.
At this time, RC6 is slated to be the last release candidate before
shipping a stable version.</xhtml:p>
<xhtml:p>RC6 has continued the cycle of decreasing numbers of pull
requests, lending weight to the idea that we are hitting a stable
API. Around 30 patches were handled -- though not all were merged
-- ranging from small consistency fixes to solutions for
often-reported issues. Additionally, around 20 documentation
patches were handled, providing a steady stream of updates for the
user guide.</xhtml:p>
<xhtml:p>The full changelog is as follows:</xhtml:p>
<xhtml:pre>
- Zend\Config
  - The INI adapter now allows bracket notation for appending values to an array
    within INI definitions.
- Zend\Db
  - ResultInterface adds isBuffered() method for checking if the resultset is
    buffered or not. Allows for more fine grained control of result set
    buffering, including using the database engine's native buffering.
  - Insertions with multi-part keys now work properly.
  - Expression objects may now be passed to the order() method of a Select
    object.
- Zend\Form
  - You can now omit error messages on elements when rendering via formRow(), by
    passing a boolean false as the third argument of the helper.
  - You can now use concrete hydrator instances with the factory.
  - You may now set the CSRF validator class and/or options to use on the Csrf
    element
  - The Select, Radio, and MultiCheckbox elements and view helpers were
    refactored to move value options into properties, instead of attributes.
    This makes them more consistent with other elements, and simplifies the
    interfaces.
  - Forms now lazy-load an input filter if none has been specified; this should
    simplify usage for many, and remove the "no input filter attached"
    exception.
  - All form helpers for buttons (button, submit, reset) now allow translation.
  - The formRow() view helper now allows you to set the CSS class used to
    designate an input with errors.
- Zend\Http
  - Some browser/web server combingations set SERVER_NAME to the IPv6 address,
    and enclose it in brackets. The PhpEnvironment\Request object now correctly
    detects such situations.
  - The Socket client will only fallback to SSLv3 if the ssltransport
    configuration key is not set (instead of also allowing SSLv2).
- Zend\I18n\Translator
  - Loader\LoaderInterface was splitted into Loader\FileLoaderInterface and
    Loader\RemoteLoaderInterface. The latter one will be used in ZF 2.1 for
    a database loader.
  - Translator::addTranslationPattern() and the option "translation_patterns"
    were renamed to Translator::addTranslationFilePattern and
    "translation_file_patterns".
  - A new method Translator::addRemoteTranslations() was added.
- Zend\Mvc
  - Application no longer defines the "application" identifier for its composed
    EventManager instance. If you had listeners listening on that context,
    update them to use "Zend\Mvc\Application". See this thread for more details:

      http://zend-framework-community.634137.n4.nabble.com/Change-to-Zend-Mvc-Application-s-event-identifiers-tp4656517.html

  - The redirect plugin's toRoute() method signature is now synced with that of
    the url plugin's fromRoute() method.
  - The PRG plugin now allows passing no arguments; if you do so, the currently
    matched route will be used for the redirect.
- Zend\Paginator
  - Removes the factory() and related methods. This was done to be more
    consistent with other components, and also because the utility was not
    terribly useful; in most cases, developers needed to configure the adapter
    up-front anyways.
- Zend\Stdlib
  - ClassMethods Hydrator now supports boolean getters prefixed with "is".
- Zend\Validator
  - DB validators no longer mix positional and named parameters.
</xhtml:pre>
<xhtml:p>The <xhtml:a href="http://github.com/zendframework/ZendSkeletonApplication">skeleton
application</xhtml:a> and a <xhtml:a href="http://github.com/zendframework/ZendSkeletonModule">skeleton
module</xhtml:a> have been updated for 2.0.0rc6, and are a great place to
look to help get you started. You may also want to check out the
<xhtml:a href="http://packages.zendframework.com/docs/latest/manual/en/user-guide/overview.html">
user guide</xhtml:a> , as it provides a comprehensive tutorial for
building a ZF2 application.</xhtml:p>
<xhtml:p>As a reminder, all ZF2 components are also available
individually as <xhtml:a href="http://pear2.php.net">Pyrus</xhtml:a> AND
<xhtml:a href="http://getcomposer.org">composer</xhtml:a> packages; <xhtml:a href="http://packages.zendframework.com">packages.zendframework.com</xhtml:a>
is our official channel for both package formats.</xhtml:p>
<xhtml:p>I'd like to thank each and every person who has contributed
ideas, feedback, pull requests (no pull request is too small!),
testing, and more -- we're almost to the goal of a stable
next-generation framework!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.0.0beta5 Released!]]></title>
    <published>2012-07-06T16:30:00+0000</published>
    <updated>2012-07-06T16:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-0-0beta5-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-0-0beta5-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.0.0beta5. Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li><xhtml:a href="http://packages.zendframework.com/">http://packages.zendframework.com/</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.0.0beta5. Packages and
installation instructions are available at:</xhtml:p>
<xhtml:dl>
<xhtml:dd><xhtml:a href="http://packages.zendframework.com/">http://packages.zendframework.com/</xhtml:a></xhtml:dd>
</xhtml:dl>
<xhtml:p>This is the fifth and last in a series of planned beta releases.
The beta release cycle has followed the "gmail" style of betas,
whereby new features have been added in each new release, and
backwards compatibility (BC) has not been guaranteed. The desire
has been for developers to adopt and work with new components as
they are shipped, and provide feedback so we can polish the
distribution.</xhtml:p>
<xhtml:p>Our plan at this time is to do some cleanup of the repository,
fix some outstanding issues and features, migrate documentation to
a new repository and format, and then begin the release candidate
process. At this time, we anticipate few if any BC breaks between
now and the first release candidate (RC). Applications built today
on beta5 will operate in the way we expect them to for the stable
release.</xhtml:p>
<xhtml:p>Beta5 had a rigorous and busy schedule. We tackled a number of
consistency issues, and solidified the security the framework
offers via several fixes and the new Escaper component. We
processed over 400 pull requests again, in a shorter timeframe than
we had for beta4; the community really pulled together to get this
release out the door.</xhtml:p>
<xhtml:p>There are three primary new features for the release:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li><xhtml:code>Zend\Escaper</xhtml:code>, which provides an OWASP-compliant
solution for context-specific escaping mechanisms targetting HTML,
HTML attributes, URLs, CSS, and JavaScript.</xhtml:li>
<xhtml:li><xhtml:code>Zend\I18n</xhtml:code>, which leverages <xhtml:acronym title="PHP Hypertext Preprocessor">PHP</xhtml:acronym>'s <xhtml:code>ext/intl</xhtml:code>
extension to provide localization, and also provides a new
translation component.</xhtml:li>
<xhtml:li><xhtml:code>Zend\Form</xhtml:code> now has new annotation support, allowing
you to define annotations in your domain entities that can then be
used to build a form and its related input filter and hydrator.
Annotation support now has a dependency on <xhtml:a href="http://doctrine-project.org">Doctrine\Common</xhtml:a>'s annotation
library, for our default annotation syntax parser.</xhtml:li>
</xhtml:ul>
<xhtml:p>2.0.0beta5 had many more changes, as you can see from the
release changelog:</xhtml:p>
<xhtml:pre>
 - Escaper component (Padraic Brady)
    - Provides context-specific escaping mechanisms for HTML content,
      HTML attributes, URLs, CSS, and JavaScript.
    - BC BREAK: The escape() view helper was removed, and replaced with
      escapeHtml(), escapeHtmlAttr(), escapeJs(), escapeCss(), and
      escapeUrl() implementations.
 - New I18n component (Ben Scholzen, Chris Martin, Dennis Portnov,
   Matthew Weier O'Phinney)
    - New component leveraging PHP's ext/intl extension to provide
      internationalization (i18n) and localization (L10n) features and
      capabilities to applications.
    - LEVERAGES:
        - DateTime, DateTimezone, IntlDateFormatter
        - Locale
        - NumberFormatter
    - BC BREAK: REMOVES the following components:
        - Zend\Currency
        - Zend\Date
        - Zend\Locale
        - Zend\Measure
        - Zend\Translator
        - All filters, validators, and view helpers that relied on the
          above.
    - PROVIDES:
        - Zend\I18n\Translator, including support for gettext and
          PHP-array-based translations (more are planned).
        - Zend\I18n\Filter, containing localized filtering capabilites
          for Alnum (alphanumeric), Alpha (alphabetic), and NumberFormat
          (numerical strings).
        - Zend\I18n\Validator, containing localized validation
          capabilities for Alnum (alphanumeric), Alpha (alphabetic),
          Iban (international bank account number standard), Int
          (integer), and PostCode (localized postal codes).
        - Zend\I18n\View, containing localized view helpers for
          CurrencyFormat, DateFormat, NumberFormat, Translate, and
          TranslatePlural.
 - Db layer additions (Ralph Schindler, Rob Allen, Guillaume Metayer,
   Sascha Howe, Chris Testroet, Evan Coury, Ben Youngblood)
    - Metadata support
    - Postgresql adapter/driver
    - New HydratingResultSet, allowing the ability to specify a custom
      hydrator (from Zend\Stdlib\Hydrator) for hydrating row objects.
    - Many bugfixes and stabilizations
 - Form additions (Matthew Weier O'Phinney, Michaël Gallego, Yanick Rochon)
    - Annotations support: Ability to use annotations with a domain
      object in order to define a form, fieldsets, elements, inputs and
      input filters, and more.
    - Hydration of fieldsets; fieldsets may compose their own hydrators
      if desired.
    - Collection support; allows multiple instances of the same
      fieldset. As an example, you might have an interface that
      allows adding a set of form elements via an XHR call; on the
      backend, these would be defined as a collection, allowing
      arbitrary numbers of these fieldsets to be submitted.
    - New view helpers covering most HTML5-specific element types, most
      XHTML-specific element types. Additionally, a number of the
      HTML5-specific element types now have Element implementations to
      create turn-key solutions that include validation and filtering.
    - BC BREAK: Options support. Many attributes were being used not as
      HTML attributes but to define behavior. The ElementInterface now
      has an accessor and mutator for options. Examples of options
      include labels for non-radio/checkbox/select elements, the CAPTCHA
      adapter for CAPTCHA elements, CSRF tokens, etc. If you were
      defining labels in your forms, please move the label and label
      attributes definitions from the "attributes" to the "options" of
      the element, fieldset, or form.
    - BC BREAK: new interface, ElementPrepareAwareInterface, defining
      the method "prepareElement(Form $form)". The FieldsetInterface,
      and, by extension, FormInterface, extend this new interface. It is
      used to allow preparing elements prior to creating a
      representation.
 - MVC additions (Kyle Spraggs, Evan Coury, Matthew Weier O'Phinney)
    - New "Params" controller plugin. Allows retrieving query, post,
      cookie, header, and route parameters. Usage is
      $this-&gt;params()-&gt;fromQuery($name, $default).
    - New listener, Zend\Mvc\ModuleRouteListener. When enabled, if a
      route match contains a "\__NAMESPACE__" key, that namespace value
      will be prepended to the value of the "controller" key. This
      should typically be used in the root route for a given module, to
      ensure controller names do not clash.
    - Bootstrap simplification. A new "init()" method was created that
      accepts the path to a configuration file, and then creates and
      bootstraps the application; this eliminates all common boilerplate
      for the bootstrap scripts.
 - Hydrator changes (Adam Lundrigan)
    - BC BREAK: the ClassMethods hydrator now assumes by default that
      it should convert between underscore_separated names and
      camelCase.
 - BC BREAK: Doctrine Annotations Parser (Matthew Weier O'Phinney, Marco
   Pivetta, Guilherme Blanco)
    - Zend\Code\Annotation now has a dependency on Doctrine\Common for
      its annotation parser.
    - Annotations now conform to Doctrine's standards by default, but
      the AnnotationManager in ZF2 allows attaching alternate parsers
      for specific annotation types.
 - BC BREAK: Removal of Plugin Broker usage (Matthew Weier O'Phinney,
   Evan Coury)
    - All uses of the Plugin Broker / Plugin Class Locator combination
      were removed. A new class, Zend\ServiceManager\AbstractPluginManager, 
      was created and used to replace all previous usages of the plugin
      broker. This provides more flexibility in creation of plugins, as
      well as reduces the number of APIs developers need to learn.
    - Configuration of plugin managers is now done at the top-level. All
      plugin manager configuration follows the format utilized by
      Zend\ServiceManager\ServiceConfiguration, and
      Zend\ModuleManager\Listener\ServiceListener has been updated to
      allow informing it of plugin manager instances it should manage,
      as well as the configuration key to utilize.
 - BC BREAK: Coding Standards (Maks3w, Sascha Prolic, Rob Allen)
    - Renamed most abstract classes to prefix them with the term
      "Abstract". In particular, ActionController and RestfulController
      are now AbstractActionController and AbstractRestfulController.
    - Renamed getters in HTTP, EventManager, and Mail components. These
      components were using accessors such as "events()", "query()",
      "headers()", etc. All such accessors were renamed to prepend
      "get", and, in the case of "events()", renamed to indicate the
      actual object retrieved ("getEventManager()"). 
 - SECURITY FIX: XmlRpc (Matthew Weier O'Phinney)
    - A security issue arising from XML eXternal Entity (XXE) injection
      was patched; see http://framework.zend.com/security/advisory/ZF2012-01
</xhtml:pre>
<xhtml:p>The <xhtml:a href="http://github.com/zendframework/ZendSkeletonApplication">skeleton
application</xhtml:a> and a <xhtml:a href="http://github.com/zendframework/ZendSkeletonModule">skeleton
module</xhtml:a> have been updated for 2.0.0beta5, and are a great place
to look to help get you started. You may also want to check out the
<xhtml:a href="http://packages.zendframework.com/docs/latest/manual/en/zend.mvc.quick-start.html">
quick start guide to the MVC</xhtml:a>.</xhtml:p>
<xhtml:p>As a reminder, all ZF2 components are also available
individually as <xhtml:a href="http://pear2.php.net">Pyrus</xhtml:a> AND
composer packages; packages.zendframework.com is our official
channel for both package formats.</xhtml:p>
<xhtml:p>I'd like to thank each and every person who has contributed
ideas, feedback, pull requests (no pull request is too small!),
testing, and more -- every contribution is leading to a better,
more stable, polished framework.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.0.0beta4 Released!]]></title>
    <published>2012-05-22T20:30:00+0000</published>
    <updated>2012-05-22T20:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-0-0beta4-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-0-0beta4-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.0.0beta4. Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li><xhtml:a href="http://packages.zendframework.com/">http://packages.zendframework.com/</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is the fourth in a series of planned beta releases. The
beta release cycle is following the "gmail" style of betas, whereby
new features will be added in each new release, and BC will not be
guaranteed; beta releases will happen <xhtml:em>approximately</xhtml:em> every
six weeks. The desire is for developers to adopt and work with new
components as they are shipped, and provide feedback so we can
polish the distribution.</xhtml:p>
<xhtml:p>Our plan at this time is to have one last beta towards the end
of June 2012, and then begin the release candidate process. At this
time, the MVC is looking and operating in the way we expect it to
for the stable release.</xhtml:p>
<xhtml:p>Beta4 was tremendously busy; as I compiled the release notes and
looked through the pull requests, I discovered we'd handled more
than double the number of pull requests, and did similarly in terms
of delivering new features and rewrites. The community did a
tremendous amount of work polishing the framework and making it
better.</xhtml:p>
<xhtml:p>From the release changelog:</xhtml:p>
<xhtml:pre>
 - Config component (Enrico Zimuel)
    -  Added reader and writer implementations for JSON and YAML configuration
 - Crypt and Math (Enrico Zimuel)
    - Creates a generic API for string and stream en/decryption
    - Provides bcrypt support
    - Provides BigInteger support
    - Provides common methodology surrounding credential encryption and hashing
 - Db layer (Ralph Schindler)
    - Zend\Db\Adapter: added buffer() to the ResultInterface, added that feature
      to Mysqli Result object
    - Zend\Db\Adapter: added ability to subselect Sqlite for returning a true
      count()
    - Zend\Db\Adapter: added API to return helper closures from the Adapter API
    - Renamed "database" to "schema" in all usages across Zend\Db
    - Zend\Db\Adapter: Various fixes for PDO connection parameters
    - Zend\Db\Sql: created a shared AbstractSql implementation to share
      expression processing
    - Zend\Db\Sql: created a more robust "Expression" object for use in Select
      and Predicates
    - Zend\Db\Sql: created an internal workflow and architecture to handle the
      creation of platform specific queries
    - Zend\Db\Sql: implemented limit() and offset() API to Select
    - Zend\Db\Sql: added having(), order() to SELECT API
    - Zend\Db\Sql: added alias support to Select::columns()
    - Zend\Db\TableGateway: reorganized AbstractTableGateway and TableGateway,
      removed other extensions in favor of "Features"
    - Zend\Db\TableGateway: created a "Features" API in TableGatway to promote
      horizontal extension of TableGatway
 - Di (Ralph Schindler, Marco Pivetta)
    - Added method injectDependencies($instance), to allow injecting an object
      after an instance is already available (used in the ServiceManager)
    - Various fixes based on issue reports
 - Dojo
    - REMOVED. Support was for out-dated versions of Dojo, and with the new Form
      rewrite, it needs to be completely rewritten. This is targetted for post
      2.0.0 at this time.
 - EventManager (Matthew Weier O'Phinney)
    - New SharedEventManager, a non-static version of the original
      StaticEventManager
    - StaticEventManager now extends SharedEventManager and implements a
      singleton pattern
    - New ServiceManager creates a shared instance of SharedEventManager and
      injects it in a non-shared EventManager instance per service; static usage
      is discouraged at this time.
    - attachAggregate() now accepts an optional $priority, which, when present,
      will be passed to the ListenerAggregate, allowing specifying a priority
      during attachment of its events.
    - EventManager now can handle arrays of events as well as wildcard events
    - SharedEventManager now can handle arrays of contexts, wildcard contexts,
      and arrays/wildcard events.
 - Form (Matthew Weier O'Phinney, Kyle Spraggs, Guilherme Blanco)
    - Complete rewrite
    - Elements compose a name and attributes
    - Fieldsets compose a name, attributes, and elements and fieldsets
    - Forms compose a name, attributes, elements, fieldsets, an InputFilter, and
      optionally a Hydrator and bound object.
    - New form view helpers accept the Form objects in order to generate markup.
    - Object binding allows direct binding of model data to and from the Form.
 - InputFilter (Matthew Weier O'Phinney)
    - New component for object-oriented creation of input filters
    - Input objects compose filter and validator chains, as well as metadata
      such as required, allow empty, break on failure, and more.
    - InputFilter objects compose Input and InputFilter objects, and allow
      validating the entire set or specified validation groups.
 - Log (Enrico Zimuel, Benoit Durand)
    - Refactored to provide more flexibility
    - Adds API discoverability (instead of method overloading)
    - Uses the PluginBroker for loading writers and formatters
    - Uses PriorityQueue to manage writer priority
    - Uses FilterChain for filtering messages
    - Adds a renderer for exceptions, a JSON formatter, and additional interfaces
 - Mail (Enrico Zimuel)
    - Allow batch sending via the SMTP transport
 - ModuleManager (Evan Coury, Matthew Weier O'Phinney)
    - Renamed from "Module" to "ModuleManager"
    - Renamed "Consumer" subnamespace to "Feature"
    - Added new listeners:
      - OnBootstrapListener (Module classes defining onBootstrap() will have
        that method attached as a listener on the Application bootstrap event)
      - LocatorRegistrationListener (Module classes implementing the
        LocatorRegisteredInterface feature will be injected in the
        ServiceManager)
      - ServiceListener (Module classes defining getServiceConfiguration() will
        have that method called, and the configuration merged; once all modules
        are loaded, that merged configuration will be passed to the
        ServiceManager)
 - MVC (Matthew Weier O'Phinney, Ralph Schindler, Evan Coury)
    - Removed Bootstrap class and rewrote Application class
      - Composes a ServiceManager, and simply fires events
    - Added RouteListener and DispatchListener classes, implementing the default
      route and dispatch strategies.
    - Created a new "Service" subnamespace, with ServiceManager configuration
      and factories for the default MVC services.
    - Created a new "ViewManager" class, which triggers on the bootstrap event,
      at which time it creates the various objects of the view layer and wires
      them together as well as registers them with the appropriate events.
    - InjectTemplateListener now uses the controller namespace to further
      namespace the view template; the default is now 
      "//"
 - ServiceManager component (Ralph Schindler, Matthew Weier O'Phinney)
    - Highly performant, programmatic service creation
    - Largely replaces DI, but can also consume Zend\Di
    - Allows:
      - Service registration
      - Lazy-loaded service objects
      - Service factories
      - Service aliasing
      - Abstract (fallback) factories
      - Initializers (manipulate instances after creation)
    - Fully integrated in the MVC solution
 - Renamed interfaces (Gabriel Baker, Sascha Prolic, Maks3w)
   - Most, if not all, interfaces were renamed to suffix with the word
     "Interface". This is to promote discovery of interfaces, as well as make
     naming simpler.
   - Exceptions are affected by this as well. Exception marker interfaces were
     renamed to ExceptionInterface and pushed into the Exception subnamespace of
     each component
 - Composer support (Rob Allen, Marco Pivetta, Kyle Spraggs)
   - Zend Framework is now installable via Composer (http://packagist.org/), as
     are each of its individual components
 - Travis CI integration (Marco Pivetta, Maks3w)
   - ZF2 is tested on each commit by http://travis-ci.org/
</xhtml:pre>
<xhtml:p>In all, well over <xhtml:strong>400</xhtml:strong>(!) bug and feature
requests were handled since 2.0.0beta2 -- about twice what was
handled for beta3, which was in turn twice what we handled for
beta2! We've definitely hit some critical momentum and
adoption.</xhtml:p>
<xhtml:p>Two changes are particularly noteworthy, as they are not so much
code changes as infrastructure changes: ZF2 now has <xhtml:a href="http://packagist.org">Composer</xhtml:a> support on a per-component
basis, and the project now has continuous integration via <xhtml:a href="http://travis-ci.org">Travis CI</xhtml:a>. A number of contributors
helped make these initiatives not only possible, but succesful.</xhtml:p>
<xhtml:p>The <xhtml:a href="http://github.com/zendframework/ZendSkeletonApplication">skeleton
application</xhtml:a> and a <xhtml:a href="http://github.com/zendframework/ZendSkeletonModule">skeleton
module</xhtml:a> have been updated for 2.0.0beta4, and are a great place
to look to help get you started. You may also want to check out the
<xhtml:a href="http://packages.zendframework.com/docs/latest/manual/en/zend.mvc.quick-start.html">
quick start guide to the MVC</xhtml:a>.</xhtml:p>
<xhtml:p>As a reminder, all ZF2 components are also available
individually as <xhtml:a href="http://pear2.php.net">Pyrus</xhtml:a> AND
composer packages; packages.zendframework.com is our official
channel.</xhtml:p>
<xhtml:p>I'd like to thank each and every person who has contributed
ideas, feedback, pull requests (no pull request is too small!),
testing, and more -- I'm constantly amazed at the amount of energy
and support the community contributes to the framework!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.0.0beta3 Released!]]></title>
    <published>2012-03-02T19:30:00+0000</published>
    <updated>2012-03-02T19:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-0-0beta3-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-0-0beta3-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.0.0beta3. Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li><xhtml:a href="http://packages.zendframework.com/">http://packages.zendframework.com/</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.0.0beta3. Packages and
installation instructions are available at:</xhtml:p>
<xhtml:dl>
<xhtml:dd><xhtml:a href="http://packages.zendframework.com/">http://packages.zendframework.com/</xhtml:a></xhtml:dd>
</xhtml:dl>
<xhtml:p>This is the third in a series of planned beta releases. The beta
release cycle is following the "gmail" style of betas, whereby new
features will be added in each new release, and BC will not be
guaranteed; beta releases will happen <xhtml:em>approximately</xhtml:em> every
six weeks. The desire is for developers to adopt and work with new
components as they are shipped, and provide feedback so we can
polish the distribution.</xhtml:p>
<xhtml:p>Once all code in the proposed <xhtml:a href="http://framework.zend.com/wiki/pages/viewpage.action?pageId=43745438">
standard distribution</xhtml:a> has reached maturity and reasonable
stability, we will freeze the API and prepare for Release Candidate
status.</xhtml:p>
<xhtml:p>Featured components and functionality of 2.0.0beta3 include:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li><xhtml:b>Refactored Config component</xhtml:b>
<xhtml:ul class="ul">
<xhtml:li>All configuration readers have been moved under the
<xhtml:code>Zend\Config\Reader</xhtml:code> namespace</xhtml:li>
<xhtml:li>A <xhtml:code>Zend\Config\Factory</xhtml:code> has been added to simplify
retrieving a config object from a config file</xhtml:li>
<xhtml:li>Supported configuration formats now support importing
additional configuration files</xhtml:li>
<xhtml:li>All constant processing has been moved to a
<xhtml:code>Zend\Config\Processor</xhtml:code> namespace, and expanded to be
more powerful</xhtml:li>
<xhtml:li>Work was provided by Ben Scholzen, Artur Bodera, Enrico Zimuel,
and Evan Coury</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:b>New View layer</xhtml:b>
<xhtml:ul class="ul">
<xhtml:li>New subcomponents include <xhtml:code>Zend\View\Model</xhtml:code>,
<xhtml:code>Zend\View\Resolver</xhtml:code>, <xhtml:code>Zend\View\Renderer</xhtml:code>,
and <xhtml:code>Zend\View\Strategy</xhtml:code></xhtml:li>
<xhtml:li>The old <xhtml:code>Zend_View</xhtml:code> class has been moved to
<xhtml:code>Zend\View\Renderer\PhpRenderer</xhtml:code>, and rewritten to move
most of its responsibilities into collaborators, greatly
simplifying its design while simultaneously giving it more
capabilities.</xhtml:li>
<xhtml:li>A new class, <xhtml:code>Zend\View\View</xhtml:code>, allows selecting
rendering strategies on a per-template basis, based on arbitrary
criteria, and optionally injecting rendering results into a
Response object</xhtml:li>
<xhtml:li>MVC integration streamlines common use cases, including View
Model creation and injection, 404 and error page creation, and
more.</xhtml:li>
<xhtml:li>Work was provided by Matthew Weier O'Phinney, with copious
feedback from Rob Allen.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:b>Rewritten DB layer</xhtml:b>
<xhtml:ul class="ul">
<xhtml:li>New architecture features low-level drivers, which also provide
access to the PHP resource being consumed; adapters, which provide
basic abstraction for common CRUD operations; new SQL abstraction
layer, with full predicate support; abstraction for ResultSet's,
with the ability to cast rows to specific object types; abstraction
for SQL metadata; and a revised Table and Row Data Gateway.</xhtml:li>
<xhtml:li>Work was provided by Ralph Schindler</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:b>New AgileZen component</xhtml:b>
<xhtml:ul class="ul">
<xhtml:li>Support for the full <xhtml:a href="http://www.agilezen.com">AgileZen</xhtml:a> API</xhtml:li>
<xhtml:li>Developed for use with <xhtml:a href="http://framework.zend.com/zf2/board">our planning board</xhtml:a></xhtml:li>
<xhtml:li>Work was provided by Enrico Zimuel</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:b>PHP 5.4 Support</xhtml:b>
<xhtml:ul class="ul">
<xhtml:li>A number of issues when running ZF2 under PHP 5.4 were
identified and corrected.</xhtml:li>
</xhtml:ul>
</xhtml:li>
</xhtml:ul>
<xhtml:p>A number of other components received a fair amount of attention
during this beta cycle, including Zend\GData, Zend\Navigation,
Zend\Session, Zend\Service\StrikeIron, Zend\Service\Technorati,
Zend\Service\Twitter, Zend\Http\Header\Accept*, Zend\Ldap,
Zend\OAuth. A fair amount of feedback on the MVC and Module
components was also provided and acted upon.</xhtml:p>
<xhtml:p><xhtml:b>In all, around 200 bug and feature requests were handled
since 2.0.0beta2 -- about twice what was handled for beta2!</xhtml:b></xhtml:p>
<xhtml:p>The <xhtml:a href="http://github.com/zendframework/ZendSkeletonApplication">skeleton
application</xhtml:a> and a <xhtml:a href="http://github.com/zendframework/ZendSkeletonModule">skeleton
module</xhtml:a> have been updated for 2.0.0beta3, and are a great place
to look to help get you started. You may also want to check out the
<xhtml:a href="http://packages.zendframework.com/docs/latest/manual/en/zend.mvc.quick-start.html">
quick start guide to the MVC</xhtml:a>. powerful.</xhtml:p>
<xhtml:p>As a reminder, all ZF2 components are also available
individually as <xhtml:a href="http://pear2.php.net">Pyrus</xhtml:a> packages;
packages.zendframework.com is our official channel.</xhtml:p>
<xhtml:p>I'd like to thank each and every person who has contributed
ideas, feedback, pull requests (no pull request is too small!),
testing, and more -- what the Zend Framework community has
accomplished in the last two months is nothing short of
astonishing!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.0.0beta2 Released!]]></title>
    <published>2011-12-20T20:30:00+0000</published>
    <updated>2011-12-20T20:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-0-0beta2-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-0-0beta2-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.0.0beta2. Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li><xhtml:a href="http://packages.zendframework.com/">http://packages.zendframework.com/</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is the second in a series of planned beta releases. The
beta release cycle is following the "gmail" style of betas, whereby
new features will be added in each new release, and BC will not be
guaranteed; beta releases will happen <xhtml:em>approximately</xhtml:em> every
six weeks. The desire is for developers to adopt and work with new
components as they are shipped, and provide feedback so we can
polish the distribution.</xhtml:p>
<xhtml:p>Once all code in the proposed <xhtml:a href="http://framework.zend.com/wiki/pages/viewpage.action?pageId=43745438">
standard distribution</xhtml:a> has reached maturity and reasonable
stability, we will freeze the API and prepare for Release Candidate
status.</xhtml:p>
<xhtml:p>Featured components and functionality of 2.0.0beta2 include:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li><xhtml:b>Refactored Mail component</xhtml:b>
<xhtml:ul class="ul">
<xhtml:li>The Storage API has been left intact, though several classes
and interfaces were shuffled around.</xhtml:li>
<xhtml:li>Zend\Mail\Mail was renamed to Zend\Mail\Message; it now
encapsulates a mail message and all headers. MIME messages are
created by attaching a Zend\Mime\Message object as the mail message
body</xhtml:li>
<xhtml:li>Added Zend\Mail\Address and Zend\Mail\AddressList, used to
represent single addresses and address collections, particularly
within mail headers</xhtml:li>
<xhtml:li>Added Zend\Mail\Header\* and Zend\Mail\Headers, representations
of mail headers.</xhtml:li>
<xhtml:li>A new Zend\Mail\Transport interface defines simply
<xhtml:code>send(Message $message)</xhtml:code>. The SMTP, File, and Sendmail
transports were rewritten to consume Message objects, and to
introduce Options classes.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:b>Refactored Cache component</xhtml:b>
<xhtml:ul class="ul">
<xhtml:li>Completely rewritten component.</xhtml:li>
<xhtml:li>New API features storage adapters and adapter plugins for
implementing cache storage and features such as serialization,
clearing, and optimizing.</xhtml:li>
<xhtml:li>Current adapters include filesystem, APC, memcached, and
memory.</xhtml:li>
<xhtml:li>All adapters can describe capabilities.</xhtml:li>
<xhtml:li>Plugins are implemented as event listeners.</xhtml:li>
<xhtml:li>A new "Pattern" API was created to simplify things like method,
class, object, and output caching.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:b>MVC updates</xhtml:b>
<xhtml:ul class="ul">
<xhtml:li>Zend\Module\Manager was stripped of most functionality; it now
simply iterates requested modules and triggers events.</xhtml:li>
<xhtml:li>Former manager functionality such as class loading and
instantiation, <xhtml:code>init()</xhtml:code> triggering, configuration
gathering, and autoloader seeding were moved to event
listeners.</xhtml:li>
<xhtml:li>Post-module loading configuration globbing support was added,
simplifying the story of overriding module configuration.</xhtml:li>
<xhtml:li>The recommended filesystem no longer uses plurals for directory
names.</xhtml:li>
<xhtml:li>The recommendations now include a <xhtml:code>chdir(__DIR__ .
'/../')</xhtml:code> from the "public/index.php" file, and specifying
configuration paths to be relative to application directory.</xhtml:li>
</xhtml:ul>
</xhtml:li>
</xhtml:ul>
<xhtml:p>In addition, over 100 bug and feature requests were handled
since 2.0.0beta1.</xhtml:p>
<xhtml:p>The <xhtml:a href="http://github.com/zendframework/ZendSkeletonApplication">skeleton
application</xhtml:a> and a <xhtml:a href="http://github.com/zendframework/ZendSkeletonModule">skeleton
module</xhtml:a> built for 2.0.0beta1 have been updated for 2.0.0beta2,
and are a great place to look to help get you started. You may also
want to check out the <xhtml:a href="http://packages.zendframework.com/docs/latest/manual/en/zend.mvc.quick-start.html">
quick start guide to the MVC</xhtml:a>. powerful.</xhtml:p>
<xhtml:p>As a reminder, all ZF2 components are also available
individually as <xhtml:a href="http://pear2.php.net">Pyrus</xhtml:a> packages;
packages.zendframework.com is our official channel.</xhtml:p>
<xhtml:p>I'd like to thank each and every person who has contributed
ideas, feedback, pull requests (no pull request is too small!),
testing, and more -- we have a solid chunk of quality new
functionality to test now thanks to your efforts!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[2011-11-21 Dev status update]]></title>
    <published>2011-11-21T18:35:00+0000</published>
    <updated>2011-11-21T18:35:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2011-11-21-dev-status-update.html"/>
    <id>http://framework.zend.com/blog/2011-11-21-dev-status-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>What's going on in ZF2 development this week?</xhtml:p>
<xhtml:p>A few things!</xhtml:p>
<xhtml:h2 id="toc_3.1">Repository Changes!</xhtml:h2>
<xhtml:p>We've now moved our canonical repository to GitHub, which is
where most folks were forking and doing development anyways. The
reasons were several:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li>The main reason for self-hosting was to make checking CLA
status simpler. As ZF2 development no longer requires a CLA, this
reason is gone.</xhtml:li>
<xhtml:li>ACLs for providing commit access are easier to manage on
GitHub, and do not require us to first receive SSH keys from
contributors.</xhtml:li>
<xhtml:li>Using GitHub directly simplifies the pull request process. When
self-hosting, we would merge and push to the canonical repo, and
then need to manually close the pull request; using GitHub, PRs are
automatically closed when the code is merged. Additionally, because
the mirroring only occurred a few times per day, it was not
immediately evident on GitHub when a change was available to
test.</xhtml:li>
<xhtml:li>There was often confusion by developers on where the most
current changes were, particularly if they forked from the GitHub
repository.</xhtml:li>
</xhtml:ul>
<xhtml:p>The practical upshot is that if you had git.zendframework.com as
a remote on your repository, you should remove it. If you didn't
have a github.com/zendframework/zf2 remote, you should add one. The
<xhtml:a href="http://bit.ly/zf2gitguide">ZF2 Git Guide</xhtml:a> details
adding the remote.</xhtml:p>
<xhtml:h2 id="toc_3.2">MVC Developments</xhtml:h2>
<xhtml:p>Two big things occurred in the MVC this week.</xhtml:p>
<xhtml:p>First, we did some re-thinking of the duties of the Module
Manager. Previously, it was responsible for merging configuration
and firing module initialization. A recommended part of module
initialization was to initialize autoloading.</xhtml:p>
<xhtml:p>What we noticed was:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li>Configuration merging was getting more complex, and we were
getting potentially incompatible feature requests.</xhtml:li>
<xhtml:li>Our modules were getting hard dependencies on things like
autoloaders, and were also introducing a lot of boiler-plate
code.</xhtml:li>
<xhtml:li>We had no clear path to how we might cache autoloading
configuration for production.</xhtml:li>
<xhtml:li>We were noticing more and more places where we might want to
loop through the loaded modules in order to trigger methods of
interest.</xhtml:li>
</xhtml:ul>
<xhtml:p>So, the solution was to change things:
<xhtml:code>Zend\Module\Manager::loadModule()</xhtml:code> now triggers a
"loadModule" event, passing it the newly created module. This
allows listeners to react to modules real-time as they're
loaded.</xhtml:p>
<xhtml:p>This also meant that the code for the following actions could be
moved to listeners:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li>Autoloading</xhtml:li>
<xhtml:li>Configuration loading</xhtml:li>
<xhtml:li>Module "initialization"</xhtml:li>
</xhtml:ul>
<xhtml:p>This allows modules that look like this:</xhtml:p>
<xhtml:pre class="highlight">
namespace Blog;

use InvalidArgumentException,
    Zend\EventManager\StaticEventManager,
    Zend\Module\Consumer\AutoloaderProvider;

class Module implements AutoloaderProvider
{
    public function init()
    {
        $events = StaticEventManager::getInstance();
        $events-&gt;attach('bootstrap', 'bootstrap', array($this, 'bootstrap'));
    }

    public function getAutoloaderConfig()
    {
        return array(
            'Zend\Loader\ClassMapAutoloader' =&gt; array(
                __DIR__ . '/autoload_classmap.php'
            ),
        );
    }

    public function getConfig()
    {
        return include __DIR__ . '/configs/module.config.php';
    }
    
    /* ... */
}
</xhtml:pre>
<xhtml:p>This looks about the same as before! The differences are:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li><xhtml:code>getAutoloaderConfig()</xhtml:code> can simply return an array
of options to pass to <xhtml:code>Zend\Loader\AutoloaderFactory</xhtml:code>.
This allows us to obtain a fully configured autoloader at the end
-- which we will eventually be able to cache, and thus eliminate
the need for the autoloader listener.</xhtml:li>
<xhtml:li><xhtml:code>getConfig()</xhtml:code> is no longer called directly by the
module manager, but instead by a listener. Again, this will make it
possible to cache the full application configuration.</xhtml:li>
<xhtml:li><xhtml:code>init()</xhtml:code> is called by a listener now.</xhtml:li>
</xhtml:ul>
<xhtml:p>In other words, the differences are largely under the hood. But
those differences mean that it's trivially easy to develop your own
listeners to tie into the module loading process in order to do
interesting things -- all without needing to touch or extend the
main module manager.</xhtml:p>
<xhtml:h2 id="toc_3.3">Application Configuration</xhtml:h2>
<xhtml:p>Several people indicated that much as they like module
configuration merging, they weren't liking the solutions for
overriding configuration at the application level. The solutions to
date have been:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li>Register the module with overrides last -- for instance, your
Application module.</xhtml:li>
<xhtml:li>Create a configuration-only module that registers last.</xhtml:li>
</xhtml:ul>
<xhtml:p>The consensus was that a module for simply providing
configuration overrides "sucks", and that using the "Application"
module sometimes was problematic (especially for purposes of
registering view script paths).</xhtml:p>
<xhtml:p>The solution was to add some logic to provide application-level
configuration. This was added to the configuration listener, and
allows for you to specify a directory with configuration (ala
"conf.d" style configuration now commonly used across a number of
*nix distributions); this configuration is then merged after module
configuration is aggregated. Your <xhtml:code>index.php</xhtml:code> would then
contain something like the following:</xhtml:p>
<xhtml:pre class="highlight">
$moduleManager = new Zend\Module\Manager($appConfig['modules']);
$listenerOptions = new Zend\Module\Listener\ListenerOptions($appConfig['module_listener_options']);
$moduleManager-&gt;setDefaultListenerOptions($listenerOptions);
$moduleManager-&gt;getConfigListener()-&gt;addConfigGlobPath(dirname(__DIR__) . '/config/autoload/*.config.php');
$moduleManager-&gt;loadModules();
</xhtml:pre>
<xhtml:p>Hopefully, these changes will simplify how app-specific
configuration is managed.</xhtml:p>
<xhtml:h2 id="toc_3.4">Beta2 is coming!</xhtml:h2>
<xhtml:p>Beta2 is coming up soon! We're hoping to have it ready by the
end of the month. The components currently under development for
beta2 include:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li>Zend\Log</xhtml:li>
<xhtml:li>Zend\Cache</xhtml:li>
<xhtml:li>Zend\Mail</xhtml:li>
</xhtml:ul>
<xhtml:p>Cache is mostly complete and needs some review and input
regarding its usage of the EventManager. Log and Mail are currently
under development. We encourage you to reach out on the #zftalk.2
IRC channel on Freenode or the zf-contributors mailing list if you
would like to assist with testing or development of these
components.</xhtml:p>
<xhtml:h2 id="toc_3.5">IRC meeting this week</xhtml:h2>
<xhtml:p>We have another <xhtml:a href="http://framework.zend.com/wiki/display/ZFDEV2/2011-11-23+Meeting+Agenda">
IRC meeting this week</xhtml:a>. Follow the link to see the agenda -- and
add to it if you want to discuss additional topics.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[2011-11-11 Dev status update]]></title>
    <published>2011-11-11T18:10:00+0000</published>
    <updated>2011-11-11T18:10:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2011-11-11-dev-status-update.html"/>
    <id>http://framework.zend.com/blog/2011-11-11-dev-status-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>We've been busy since the last update!</xhtml:p>
<xhtml:p>The last update was during the busy-ness of <xhtml:a href="http://zendcon.com/">ZendCon</xhtml:a>, where we <xhtml:a href="http://framework.zend.com/zf2/blog/entry/Zend-Framework-2-0-0beta1-Released">
announced the first beta release</xhtml:a> of ZF2. The release was met
with a lot of enthusiasm, and we've seen increased usage and
testing of ZF2 in the weeks following.</xhtml:p>
<xhtml:p>Since then, let's recap what's been going on in ZF2
development.</xhtml:p>
<xhtml:h2 id="toc_4.1">IRC Meetings</xhtml:h2>
<xhtml:h3 id="toc_4.1.1">26 October 2011 IRC Meeting</xhtml:h3>
<xhtml:p>We held an IRC meeting the Wednesday immediately following
ZendCon. During the meeting, we discussed three items: a nascent
ACL/RBAC RFC, differences between RFCs and proposals, and module
distribution and installation.</xhtml:p>
<xhtml:p>The conclusions were:</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li>Not enough details as to whether we need to refactor ACL, other
than to take advantage of some SPL interfaces and classes. Somebody
needs to spearhead this. Additionally, if those changes are made,
the few calls for an RBAC component may be moot.</xhtml:li>
<xhtml:li>RFCs are for architectural changes or to discuss
refactors/rewrites of <xhtml:em>existing</xhtml:em> components; proposals are
for <xhtml:em>new</xhtml:em> components. Consensus is that we need more action
and visibility from the CR-Team, and those on the team that were
present took notes and followed up with a meeting.</xhtml:li>
<xhtml:li>Basically, the Modules distribution/instalation RFC is on hold
until some other intitiatives (such as the CLI RFC) are
finalized.</xhtml:li>
</xhtml:ul>
<xhtml:p><xhtml:a href="http://framework.zend.com/wiki/display/ZFDEV2/2011-10-26+Meeting+Log">
Read the full log.</xhtml:a></xhtml:p>
<xhtml:h3 id="toc_4.1.2">9 November 2011 IRC Meeting</xhtml:h3>
<xhtml:p>Two weeks later (this week!) we had another IRC meeting,
covering three separate RFCs: Mail, Log, and CLI.</xhtml:p>
<xhtml:p>Both the Mail and Log RFCs were approved for development, with
some questions/changes/additions/etc. highlighted during the
meeting.</xhtml:p>
<xhtml:p>The CLI RFC is still somewhat rough and needs additional detail,
but is headed in the right direction.</xhtml:p>
<xhtml:p><xhtml:a href="http://framework.zend.com/wiki/display/ZFDEV2/2011-11-09+Meeting+Log">
Read the full log.</xhtml:a></xhtml:p>
<xhtml:h2 id="toc_4.2">RFCs</xhtml:h2>
<xhtml:p>Three new RFCs were added (and discussed):</xhtml:p>
<xhtml:ul class="ul">
<xhtml:li><xhtml:a href="http://framework.zend.com/wiki/display/ZFDEV2/RFC+-+Log+refactoring">
Zend\Log refactoring</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="http://framework.zend.com/wiki/display/ZFDEV2/RFC+-+Mail+refactoring">
Zend\Mail refactoring</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="http://framework.zend.com/wiki/display/ZFDEV2/RFC+-+CLI">Console
refactoring/CLI component/Tool refactoring</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>As noted in the section on IRC meetings, the Log and Mail RFCs
have been approved for development, and are on target for our
second beta release. The CLI RFC is still being revised, but is on
target for a potential beta3 release.</xhtml:p>
<xhtml:h2 id="toc_4.3">Development</xhtml:h2>
<xhtml:p>Most development has centered on revisions due to feedback on
beta1. In particular, some new ideas have been fleshed out to
simplify the module manager, while simultaneously making it more
flexible and easier to accomplish initialization tasks (such as
retrieving autoloading and configuration artifacts, registering
events, etc). You can <xhtml:a href="https://gist.github.com/1348598">view a sample here</xhtml:a>.
Additionally, Ralph has been working to accommodate a number of
additional DI use cases identified by users testing the new
MVC.</xhtml:p>
<xhtml:p>Matthew has removed all ZF1 MVC components and pushed them into
a new module, under "modules/ZendFramework1Mvc". As part of that
work, he also identified all components that had dependencies on
the old MVC system (particularly the front controller), and
refactored them to remove those dependencies and support dependency
injection. This work is on the current master.</xhtml:p>
<xhtml:p>Enrico has been working on adapting the latest version of the
Windows Azure SDK to ZF2, as well as addressing it in the
Zend\Cloud\Infrastructure component. We should see this work
hitting master early next week.</xhtml:p>
<xhtml:p>With the Mail and Log RFCs now ratified, development on these
will progress, and we should see fresh code for these components
next week.</xhtml:p>
<xhtml:p>Finally, we announced that ZF2 contributions no longer require a
CLA, effective immediately. Since the announcement, we've seen
quite a number of new pull requests from new contributors, and we
expect this trend to continue.</xhtml:p>
<xhtml:h2 id="toc_4.4">Fin</xhtml:h2>
<xhtml:p>These are exciting times for Zend Framework 2 development, and
we encourage you to get involved!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
</feed>
